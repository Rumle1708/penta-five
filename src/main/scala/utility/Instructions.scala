package utility

import chisel3._
import chisel3.util._

object Instructions {

    // RV32I instructions
    def LUI:                    BitPat = BitPat("b?????????????????????????0110111") // LUI:
    def AUIPC:                  BitPat = BitPat("b?????????????????????????0010111") // AUIPC:
    def JAL:                    BitPat = BitPat("b?????????????????????????1101111") // JAL:
    def JALR:                   BitPat = BitPat("b?????????????????000?????1100111") // JALR:
    def BEQ:                    BitPat = BitPat("b?????????????????000?????1100011") // BEQ:
    def BNE:                    BitPat = BitPat("b?????????????????001?????1100011") // BNE:
    def BLT:                    BitPat = BitPat("b?????????????????100?????1100011") // BLT:
    def BGE:                    BitPat = BitPat("b?????????????????101?????1100011") // BGE:
    def BLTU:                   BitPat = BitPat("b?????????????????110?????1100011") // BLTU:
    def BGEU:                   BitPat = BitPat("b?????????????????111?????1100011") // BGEU:
    def LB:                     BitPat = BitPat("b?????????????????000?????0000011") // LB:
    def LH:                     BitPat = BitPat("b?????????????????001?????0000011") // LH:
    def LW:                     BitPat = BitPat("b?????????????????010?????0000011") // LW:
    def LBU:                    BitPat = BitPat("b?????????????????100?????0000011") // LBU:
    def LHU:                    BitPat = BitPat("b?????????????????101?????0000011") // LHU:
    def SB:                     BitPat = BitPat("b?????????????????000?????0100011") // SB:
    def SH:                     BitPat = BitPat("b?????????????????001?????0100011") // SH:
    def SW:                     BitPat = BitPat("b?????????????????010?????0100011") // SW:
    def ADDI:                   BitPat = BitPat("b?????????????????000?????0010011") // ADDI:
    def SLTI:                   BitPat = BitPat("b?????????????????010?????0010011") // SLTI:
    def SLTIU:                  BitPat = BitPat("b?????????????????011?????0010011") // SLTIU:
    def XORI:                   BitPat = BitPat("b?????????????????100?????0010011") // XORI:
    def ORI:                    BitPat = BitPat("b?????????????????110?????0010011") // ORI:
    def ANDI:                   BitPat = BitPat("b?????????????????111?????0010011") // ANDI:
    def SLLI:                   BitPat = BitPat("b0000000??????????001?????0010011") // SLLI:
    def SRLI:                   BitPat = BitPat("b0000000??????????101?????0010011") // SRLI:
    def SRAI:                   BitPat = BitPat("b0100000??????????101?????0010011") // SRAI:
    def ADD:                    BitPat = BitPat("b0000000??????????000?????0110011") // ADD:
    def SUB:                    BitPat = BitPat("b0100000??????????000?????0110011") // SUB:
    def SLL:                    BitPat = BitPat("b0000000??????????001?????0110011") // SLL:
    def SLT:                    BitPat = BitPat("b0000000??????????010?????0110011") // SLT:
    def SLTU:                   BitPat = BitPat("b0000000??????????011?????0110011") // SLTU:
    def XOR:                    BitPat = BitPat("b0000000??????????100?????0110011") // XOR:
    def SRL:                    BitPat = BitPat("b0000000??????????101?????0110011") // SRL:
    def SRA:                    BitPat = BitPat("b0100000??????????101?????0110011") // SRA:
    def OR:                     BitPat = BitPat("b0000000??????????110?????0110011") // OR:
    def AND:                    BitPat = BitPat("b0000000??????????111?????0110011") // AND:
    def FENCE:                  BitPat = BitPat("b?????????????????000?????0001111") // FENCE:
    def ECALL:                  BitPat = BitPat("b00000000000000000000000001110011") // ECALL:
    def EBREAK:                 BitPat = BitPat("b00000010000000000000000001110011") // EBREAK:

    // RV32M extension instructions
    def MUL:                    BitPat = BitPat("b0000001??????????000?????0110011") // MUL
    def MULH:                   BitPat = BitPat("b0000001??????????001?????0110011") // MULH
    def MULHSU:                 BitPat = BitPat("b0000001??????????010?????0110011") // MULHSU
    def MULHU:                  BitPat = BitPat("b0000001??????????011?????0110011") // MULHU
    def DIV:                    BitPat = BitPat("b0000001??????????100?????0110011") // DIV
    def DIVU:                   BitPat = BitPat("b0000001??????????101?????0110011") // DIVU
    def REM:                    BitPat = BitPat("b0000001??????????110?????0110011") // REM
    def REMU:                   BitPat = BitPat("b0000001??????????111?????0110011") // REMU

    // RV32 Zicsr extension
    def CSRRW:                  BitPat = BitPat("b?????????????????001?????1110011")
    def CSRRS:                  BitPat = BitPat("b?????????????????010?????1110011")
    def CSRRC:                  BitPat = BitPat("b?????????????????011?????1110011")
    def CSRRWI:                 BitPat = BitPat("b?????????????????101?????1110011")
    def CSRRSI:                 BitPat = BitPat("b?????????????????110?????1110011")
    def CSRRCI:                 BitPat = BitPat("b?????????????????111?????1110011")
    // Pseudo CSR instructions
    def CSRW:                   BitPat = BitPat("b?????????????????001000001110011")
    def CSRR:                   BitPat = BitPat("b????????????00000010?????1110011")


    // RV32F extension instructions
    def FLW:                    BitPat = BitPat("b?????????????????010?????0000111")
    def FSW:                    BitPat = BitPat("b?????????????????010?????0100111")
    def FMADD_S:                BitPat = BitPat("b?????00??????????????????1000011")
    def FMSUB_S:                BitPat = BitPat("b?????00??????????????????1000111")
    def FNMSUB_S:               BitPat = BitPat("b?????00??????????????????1001011")
    def FNMADD_S:               BitPat = BitPat("b?????00??????????????????1001111")
    def FADD_S:                 BitPat = BitPat("b0000000??????????????????1010011")
    def FSUB_S:                 BitPat = BitPat("b0000100??????????????????1010011")
    def FMUL_S:                 BitPat = BitPat("b0001000??????????????????1010011")
    def FDIV_S:                 BitPat = BitPat("b0001100??????????????????1010011")
    def FSQRT_S:                BitPat = BitPat("b010110000000?????????????1010011")
    def FSGNJ_S:                BitPat = BitPat("b0010000??????????000?????1010011")
    def FSGNJN_S:               BitPat = BitPat("b0010000??????????001?????1010011")
    def FSGNJX_S:               BitPat = BitPat("b0010000??????????010?????1010011")
    def FMIN_S:                 BitPat = BitPat("b0010100??????????000?????1010011")
    def FMAX_S:                 BitPat = BitPat("b0010100??????????001?????1010011")
    def FCVT_W_S:               BitPat = BitPat("b110000000000?????????????1010011")
    def FCVT_WU_S:              BitPat = BitPat("b110000000001?????????????1010011")
    def FMV_X_W:                BitPat = BitPat("b111000000000?????000?????1010011")
    def FEQ_S:                  BitPat = BitPat("b1010000??????????010?????1010011")
    def FLT_S:                  BitPat = BitPat("b1010000??????????001?????1010011")
    def FLE_S:                  BitPat = BitPat("b1010000??????????000?????1010011")
    def FCLASS_S:               BitPat = BitPat("b111000000000?????001?????1010011")
    def FCVT_S_W:               BitPat = BitPat("b110100000000?????????????1010011")
    def FCVT_S_WU:              BitPat = BitPat("b110100000001?????????????1010011")
    def FMV_W_X:                BitPat = BitPat("b111100000000?????000?????1010011")

    // The ones we will implement
        // Load/stores
        /*
        // Not lets store v2 as a masked e8 store, with x0 as base address
      inputInst("b000_0_00_1_00000_00000_000_00010_0100111".U)
      // Then lets load v4 as an unmasked e8 load, with x0 as base address
      inputInst("b000_0_00_0_00000_00000_000_00100_0000111".U)
      // Then lets load v5 as masked e8 load, with x0 as base address
      inputInst("b000_0_00_1_00000_00000_000_00101_0000111".U)
         */
    def VLE8_V:                 BitPat = BitPat("b???_0_00_?_00000_?????_000_?????_0000111")
    def VLE16_V:                BitPat = BitPat("b???_0_00_?_00000_?????_101_?????_0000111")
    def VLE32_V:                BitPat = BitPat("b???_0_00_?_00000_?????_110_?????_0000111")
    def VSE8_V:                 BitPat = BitPat("b???_0_00_?_00000_?????_000_?????_0100111")
    def VSE16_V:                BitPat = BitPat("b???_0_00_?_00000_?????_101_?????_0100111")
    def VSE32_V:                BitPat = BitPat("b???_0_00_?_00000_?????_110_?????_0100111")
        // Vset
    def VSETVLI:                BitPat = BitPat("b0_???????????_?????_111_?????_1010111")
    def VSETIVLI:               BitPat = BitPat("b11_??????????_?????_111_?????_1010111")
    def VSETVL:                 BitPat = BitPat("b1000000_?????_?????_111_?????_1010111")
        // Integer arithmetic
    def VADD_VV:                BitPat = BitPat("b000000_?_?????_?????_000_?????_1010111")
    def VSUB_VV:                BitPat = BitPat("b000010_?_?????_?????_000_?????_1010111")
    def VAND_VV:                BitPat = BitPat("b001001_?_?????_?????_000_?????_1010111")
    def VOR_VV:                 BitPat = BitPat("b001010_?_?????_?????_000_?????_1010111")
    def VXOR_VV:                BitPat = BitPat("b001011_?_?????_?????_000_?????_1010111")
    def VSLL_VV:                BitPat = BitPat("b100101_?_?????_?????_000_?????_1010111")
    def VSRL_VV:                BitPat = BitPat("b101000_?_?????_?????_000_?????_1010111")
    def VSRA_VV:                BitPat = BitPat("b101001_?_?????_?????_000_?????_1010111")
    def VMSEQ_VV:               BitPat = BitPat("b011000_?_?????_?????_000_?????_1010111")
    def VMSNE_VV:               BitPat = BitPat("b011001_?_?????_?????_000_?????_1010111")
    def VMSLTU_VV:              BitPat = BitPat("b011010_?_?????_?????_000_?????_1010111")
    def VMSLT_VV:               BitPat = BitPat("b011011_?_?????_?????_000_?????_1010111")
    def VMSLEU_VV:              BitPat = BitPat("b011100_?_?????_?????_000_?????_1010111")
    def VMSLE_VV:               BitPat = BitPat("b011101_?_?????_?????_000_?????_1010111")
    def VMULHU_VV:              BitPat = BitPat("b100100_?_?????_?????_010_?????_1010111")
    def VMUL_VV:                BitPat = BitPat("b100101_?_?????_?????_010_?????_1010111")
    def VMULHSU_VV:             BitPat = BitPat("b100110_?_?????_?????_010_?????_1010111")
    def VMULH_VV:               BitPat = BitPat("b100111_?_?????_?????_010_?????_1010111")
    def VDIVU_VV:               BitPat = BitPat("b100000_?_?????_?????_010_?????_1010111")
    def VDIV_VV:                BitPat = BitPat("b100001_?_?????_?????_010_?????_1010111")
    def VREMU_VV:               BitPat = BitPat("b100010_?_?????_?????_010_?????_1010111")
    def VREM_VV:                BitPat = BitPat("b100011_?_?????_?????_010_?????_1010111")

    def VADD_VI:                BitPat = BitPat("b000000_?_?????_?????_011_?????_1010111")
    def VAND_VI:                BitPat = BitPat("b001001_?_?????_?????_011_?????_1010111")
    def VOR_VI:                 BitPat = BitPat("b001010_?_?????_?????_011_?????_1010111")
    def VXOR_VI:                BitPat = BitPat("b001011_?_?????_?????_011_?????_1010111")
    def VSLL_VI:                BitPat = BitPat("b100101_?_?????_?????_011_?????_1010111")
    def VSRL_VI:                BitPat = BitPat("b101000_?_?????_?????_011_?????_1010111")
    def VSRA_VI:                BitPat = BitPat("b101001_?_?????_?????_011_?????_1010111")
    def VMSEQ_VI:               BitPat = BitPat("b011000_?_?????_?????_011_?????_1010111")
    def VMSNE_VI:               BitPat = BitPat("b011001_?_?????_?????_011_?????_1010111")
    def VMSLEU_VI:              BitPat = BitPat("b011100_?_?????_?????_011_?????_1010111")
    def VMSLE_VI:               BitPat = BitPat("b011101_?_?????_?????_011_?????_1010111")
    def VMSGTU_VI:              BitPat = BitPat("b011110_?_?????_?????_011_?????_1010111")
    def VMSGT_VI:               BitPat = BitPat("b011111_?_?????_?????_011_?????_1010111")

    def VADD_VX:                BitPat = BitPat("b000000_?_?????_?????_100_?????_1010111")
    def VSUB_VX:                BitPat = BitPat("b000010_?_?????_?????_100_?????_1010111")
    def VAND_VX:                BitPat = BitPat("b001001_?_?????_?????_100_?????_1010111")
    def VOR_VX:                 BitPat = BitPat("b001010_?_?????_?????_100_?????_1010111")
    def VXOR_VX:                BitPat = BitPat("b001011_?_?????_?????_100_?????_1010111")
    def VSLL_VX:                BitPat = BitPat("b100101_?_?????_?????_100_?????_1010111")
    def VSRL_VX:                BitPat = BitPat("b101000_?_?????_?????_100_?????_1010111")
    def VSRA_VX:                BitPat = BitPat("b101001_?_?????_?????_100_?????_1010111")
    def VMSEQ_VX:               BitPat = BitPat("b011000_?_?????_?????_100_?????_1010111")
    def VMSNE_VX:               BitPat = BitPat("b011001_?_?????_?????_100_?????_1010111")
    def VMSLTU_VX:              BitPat = BitPat("b011010_?_?????_?????_100_?????_1010111")
    def VMSLT_VX:               BitPat = BitPat("b011011_?_?????_?????_100_?????_1010111")
    def VMSLEU_VX:              BitPat = BitPat("b011100_?_?????_?????_100_?????_1010111")
    def VMSLE_VX:               BitPat = BitPat("b011101_?_?????_?????_100_?????_1010111")
    def VMSGTU_VX:              BitPat = BitPat("b011110_?_?????_?????_100_?????_1010111")
    def VMSGT_VX:               BitPat = BitPat("b011111_?_?????_?????_100_?????_1010111")
    def VMUL_VX:                BitPat = BitPat("b100100_?_?????_?????_110_?????_1010111")
    def VMULHU_VX:              BitPat = BitPat("b100101_?_?????_?????_110_?????_1010111")
    def VMULHSU_VX:             BitPat = BitPat("b100110_?_?????_?????_110_?????_1010111")
    def VMULH_VX:               BitPat = BitPat("b100111_?_?????_?????_110_?????_1010111")
    def VDIVU_VX:               BitPat = BitPat("b100000_?_?????_?????_110_?????_1010111")
    def VDIV_VX:                BitPat = BitPat("b100001_?_?????_?????_110_?????_1010111")
    def VREMU_VX:               BitPat = BitPat("b100010_?_?????_?????_110_?????_1010111")
    def VREM_VX:                BitPat = BitPat("b100011_?_?????_?????_110_?????_1010111")



    /*
    // RVZve32f extension instructions
        // Vector loads
    def VLE8_V:                 BitPat = BitPat("b???_0_00_?_00000_?????_000_?????_0000111")
    def VLE16_V:                BitPat = BitPat("b???_0_00_?_00000_?????_101_?????_0000111")
    def VLE32_V:                BitPat = BitPat("b???_0_00_?_00000_?????_110_?????_0000111")
    def VLM_V:                  BitPat = BitPat("b???_0_00_?_01011_?????_000_?????_0000111")
    def VLE8FF_V:               BitPat = BitPat("b???_0_00_?_10000_?????_000_?????_0000111")
    def VLE16FF_V:              BitPat = BitPat("b???_0_00_?_10000_?????_101_?????_0000111")
    def VLE32FF_V:              BitPat = BitPat("b???_0_00_?_10000_?????_110_?????_0000111")
    def VLUXEI8_V:              BitPat = BitPat("b???_0_01_?_?????_?????_000_?????_0000111")
    def VLUXEI16_V:             BitPat = BitPat("b???_0_01_?_?????_?????_101_?????_0000111")
    def VLUXEI32_V:             BitPat = BitPat("b???_0_01_?_?????_?????_110_?????_0000111")
    def VLSE8_V:                BitPat = BitPat("b???_0_10_?_?????_?????_000_?????_0000111")
    def VLSE16_V:               BitPat = BitPat("b???_0_10_?_?????_?????_101_?????_0000111")
    def VLSE32_V:               BitPat = BitPat("b???_0_10_?_?????_?????_110_?????_0000111")
    def VLOXEI8_V:              BitPat = BitPat("b???_0_11_?_?????_?????_000_?????_0000111")
    def VLOXEI16_V:             BitPat = BitPat("b???_0_11_?_?????_?????_101_?????_0000111")
    def VLOXEI32_V:             BitPat = BitPat("b???_0_11_?_?????_?????_110_?????_0000111")
    def VL1RE8_V:               BitPat = BitPat("b000_0_00_1_01000_?????_000_?????_0000111")
    def VL1RE16_V:              BitPat = BitPat("b000_0_00_1_01000_?????_101_?????_0000111")
    def VL1RE32_V:              BitPat = BitPat("b000_0_00_1_01000_?????_110_?????_0000111")
    def VL2RE8_V:               BitPat = BitPat("b001_0_00_1_01000_?????_000_?????_0000111")
    def VL2RE16_V:              BitPat = BitPat("b001_0_00_1_01000_?????_101_?????_0000111")
    def VL2RE32_V:              BitPat = BitPat("b001_0_00_1_01000_?????_110_?????_0000111")
    def VL4RE8_V:               BitPat = BitPat("b011_0_00_1_01000_?????_000_?????_0000111")
    def VL4RE16_V:              BitPat = BitPat("b011_0_00_1_01000_?????_101_?????_0000111")
    def VL4RE32_V:              BitPat = BitPat("b011_0_00_1_01000_?????_110_?????_0000111")
    def VL8RE8_V:               BitPat = BitPat("b111_0_00_1_01000_?????_000_?????_0000111")
    def VL8RE16_V:              BitPat = BitPat("b111_0_00_1_01000_?????_101_?????_0000111")
    def VL8RE32_V:              BitPat = BitPat("b111_0_00_1_01000_?????_110_?????_0000111")

        // Vector stores
    def VSE8_V:                 BitPat = BitPat("b???_0_00_?_00000_?????_000_?????_0100111")
    def VSE16_V:                BitPat = BitPat("b???_0_00_?_00000_?????_101_?????_0100111")
    def VSE32_V:                BitPat = BitPat("b???_0_00_?_00000_?????_110_?????_0100111")
    def VSM_V:                  BitPat = BitPat("b???_0_00_?_01011_?????_000_?????_0100111")
    def VSUXEI8_V:              BitPat = BitPat("b???_0_01_?_?????_?????_000_?????_0100111")
    def VSUXEI16_V:             BitPat = BitPat("b???_0_01_?_?????_?????_101_?????_0100111")
    def VSUXEI32_V:             BitPat = BitPat("b???_0_01_?_?????_?????_110_?????_0100111")
    def VSSE8_V:                BitPat = BitPat("b???_0_10_?_?????_?????_000_?????_0100111")
    def VSSE16_V:               BitPat = BitPat("b???_0_10_?_?????_?????_101_?????_0100111")
    def VSSE32_V:               BitPat = BitPat("b???_0_10_?_?????_?????_110_?????_0100111")
    def VSOXEI8_V:              BitPat = BitPat("b???_0_11_?_?????_?????_000_?????_0100111")
    def VSOXEI16_V:             BitPat = BitPat("b???_0_11_?_?????_?????_101_?????_0100111")
    def VSOXEI32_V:             BitPat = BitPat("b???_0_11_?_?????_?????_110_?????_0100111")
    def VS1R_V:                 BitPat = BitPat("b000_0_00_1_01000_?????_000_?????_0100111")
    def VS2R_V:                 BitPat = BitPat("b001_0_00_1_01000_?????_000_?????_0100111")
    def VS4R_V:                 BitPat = BitPat("b011_0_00_1_01000_?????_000_?????_0100111")
    def VS8R_V:                 BitPat = BitPat("b111_0_00_1_01000_?????_000_?????_0100111")

        // Vector-vector integer (OPIVV)
    def VADD_VV:                BitPat = BitPat("b000000_?_?????_?????_000_?????_1010111")
    def VSUB_VV:                BitPat = BitPat("b000010_?_?????_?????_000_?????_1010111")
    def VADC_VVM:               BitPat = BitPat("b010000_0_?????_?????_000_?????_1010111")
    def VMADC_VVM:              BitPat = BitPat("b010001_0_?????_?????_000_?????_1010111")
    def VMADC_VV:               BitPat = BitPat("b010001_1_?????_?????_000_?????_1010111")
    def VSBC_VVM:               BitPat = BitPat("b010010_0_?????_?????_000_?????_1010111")
    def VMSBC_VVM:              BitPat = BitPat("b010011_0_?????_?????_000_?????_1010111")
    def VMSBC_VV:               BitPat = BitPat("b010011_1_?????_?????_000_?????_1010111")
    def VAND_VV:                BitPat = BitPat("b001001_?_?????_?????_000_?????_1010111")
    def VOR_VV:                 BitPat = BitPat("b001010_?_?????_?????_000_?????_1010111")
    def VXOR_VV:                BitPat = BitPat("b001011_?_?????_?????_000_?????_1010111")
    def VSLL_VV:                BitPat = BitPat("b100101_?_?????_?????_000_?????_1010111")
    def VSRL_VV:                BitPat = BitPat("b101000_?_?????_?????_000_?????_1010111")
    def VSRA_VV:                BitPat = BitPat("b101001_?_?????_?????_000_?????_1010111")
    def VNSRL_VV:               BitPat = BitPat("b101100_?_?????_?????_000_?????_1010111")
    def VNSRA_VV:               BitPat = BitPat("b101101_?_?????_?????_000_?????_1010111")
    def VMSEQ_VV:               BitPat = BitPat("b011000_?_?????_?????_000_?????_1010111")
    def VMSNE_VV:               BitPat = BitPat("b011001_?_?????_?????_000_?????_1010111")
    def VMSLTU_VV:              BitPat = BitPat("b011010_?_?????_?????_000_?????_1010111")
    def VMSLT_VV:               BitPat = BitPat("b011011_?_?????_?????_000_?????_1010111")
    def VMSLEU_VV:              BitPat = BitPat("b011100_?_?????_?????_000_?????_1010111")
    def VMSLE_VV:               BitPat = BitPat("b011101_?_?????_?????_000_?????_1010111")
    def VMINU_VV:               BitPat = BitPat("b000100_?_?????_?????_000_?????_1010111")
    def VMIN_VV:                BitPat = BitPat("b000101_?_?????_?????_000_?????_1010111")
    def VMAXU_VV:               BitPat = BitPat("b000110_?_?????_?????_000_?????_1010111")
    def VMAX_VV:                BitPat = BitPat("b000111_?_?????_?????_000_?????_1010111")
    def VMERGE_VVM:             BitPat = BitPat("b010111_0_?????_?????_000_?????_1010111")
    def VMV_VV:                 BitPat = BitPat("b010111_1_00000_?????_000_?????_1010111")
    def VSADDU_VV:              BitPat = BitPat("b100000_?_?????_?????_000_?????_1010111")
    def VSADD_VV:               BitPat = BitPat("b100001_?_?????_?????_000_?????_1010111")
    def VSSUBU_VVM:             BitPat = BitPat("b100010_?_?????_?????_000_?????_1010111")
    def VSSUB_VV:               BitPat = BitPat("b100011_?_?????_?????_000_?????_1010111")
    def VSMUL_VV:               BitPat = BitPat("b100111_?_?????_?????_000_?????_1010111")
    def VSSRL_VV:               BitPat = BitPat("b101010_?_?????_?????_000_?????_1010111")
    def VSSRA_VV:               BitPat = BitPat("b101011_?_?????_?????_000_?????_1010111")
    def VNCLIPU_WV:             BitPat = BitPat("b101110_?_?????_?????_000_?????_1010111")
    def VNCPI_WV:               BitPat = BitPat("b101111_?_?????_?????_000_?????_1010111")
    def VWREDSUMU_VS:           BitPat = BitPat("b110000_?_?????_?????_000_?????_1010111")
    def VWREDSUM_VS:            BitPat = BitPat("b110001_?_?????_?????_000_?????_1010111")
    def VRGATHER_VV:            BitPat = BitPat("b001100_?_?????_?????_000_?????_1010111")
    def VRGATHEREI16_VV:        BitPat = BitPat("b001110_?_?????_?????_000_?????_1010111")

        // Vector-vector float (OPFVV)
    def VFADD_VV:               BitPat = BitPat("b000000_?_?????_?????_001_?????_1010111")
    def VFSUB_VV:               BitPat = BitPat("b000010_?_?????_?????_001_?????_1010111")
    def VFWADD_VV:              BitPat = BitPat("b110000_?_?????_?????_001_?????_1010111")
    def VFWSUB_VV:              BitPat = BitPat("b110010_?_?????_?????_001_?????_1010111")
    def VFWADD_WV:              BitPat = BitPat("b110100_?_?????_?????_001_?????_1010111")
    def VFWSUB_WV:              BitPat = BitPat("b110110_?_?????_?????_001_?????_1010111")
    def VFMUL_VV:               BitPat = BitPat("b100100_?_?????_?????_001_?????_1010111")
    def VFDIV_VV:               BitPat = BitPat("b100000_?_?????_?????_001_?????_1010111")
    def VFWMUL_VV:              BitPat = BitPat("b111000_?_?????_?????_001_?????_1010111")
    def VFMADD_VV:              BitPat = BitPat("b101000_?_?????_?????_001_?????_1010111")
    def VFNMADD_VV:             BitPat = BitPat("b101001_?_?????_?????_001_?????_1010111")
    def VFMSUB_VV:              BitPat = BitPat("b101010_?_?????_?????_001_?????_1010111")
    def VFNMSUB_VV:             BitPat = BitPat("b101011_?_?????_?????_001_?????_1010111")
    def VFMACC_VV:              BitPat = BitPat("b101100_?_?????_?????_001_?????_1010111")
    def VFNMACC_VV:             BitPat = BitPat("b101101_?_?????_?????_001_?????_1010111")
    def VFMSAC_VV:              BitPat = BitPat("b101110_?_?????_?????_001_?????_1010111")
    def VFNMSAC_VV:             BitPat = BitPat("b101111_?_?????_?????_001_?????_1010111")
    def VFWMACC_VV:             BitPat = BitPat("b111100_?_?????_?????_001_?????_1010111")
    def VFWNMACC_VV:            BitPat = BitPat("b111101_?_?????_?????_001_?????_1010111")
    def VFWMSAC_VV:             BitPat = BitPat("b111110_?_?????_?????_001_?????_1010111")
    def VFWNMSAC_VV:            BitPat = BitPat("b111111_?_?????_?????_001_?????_1010111")
    def VFSQRT_V:               BitPat = BitPat("b010011_?_?????_00000_001_?????_1010111")
    def VFSQRT7_V:              BitPat = BitPat("b010011_?_?????_00100_001_?????_1010111")
    def VFREC7_V:               BitPat = BitPat("b010011_?_?????_00101_001_?????_1010111")
    def VFCLASS_V:              BitPat = BitPat("b010011_?_?????_10000_001_?????_1010111")
    def VFMIN_VV:               BitPat = BitPat("b000100_?_?????_?????_001_?????_1010111")
    def VFMAX_VV:               BitPat = BitPat("b000110_?_?????_?????_001_?????_1010111")
    def VFSGNJ_VV:              BitPat = BitPat("b001000_?_?????_?????_001_?????_1010111")
    def VFSGNJN_VV:             BitPat = BitPat("b001001_?_?????_?????_001_?????_1010111")
    def VFSGNJX_VV:             BitPat = BitPat("b001010_?_?????_?????_001_?????_1010111")
    def VMFEQ_VV:               BitPat = BitPat("b011000_?_?????_?????_001_?????_1010111")
    def VMFLE_VV:               BitPat = BitPat("b011001_?_?????_?????_001_?????_1010111")
    def VMFLT_VV:               BitPat = BitPat("b011011_?_?????_?????_001_?????_1010111")
    def VMFNE_VV:               BitPat = BitPat("b011100_?_?????_?????_001_?????_1010111")
    def VFCVT_XU_F_V:           BitPat = BitPat("b010010_?_?????_00000_001_?????_1010111")
    def VFCVT_X_F_V:            BitPat = BitPat("b010010_?_?????_00001_001_?????_1010111")
    def VFCVT_F_XU_V:           BitPat = BitPat("b010010_?_?????_00010_001_?????_1010111")
    def VFCVT_F_X_V:            BitPat = BitPat("b010010_?_?????_00011_001_?????_1010111")
    def VFCVT_RTZ_XU_F_V:       BitPat = BitPat("b010010_?_?????_00110_001_?????_1010111")
    def VFCVT_RTZ_X_F_V:        BitPat = BitPat("b010010_?_?????_00111_001_?????_1010111")
    def VFREDOSUM_VS:           BitPat = BitPat("b000011_?_?????_?????_001_?????_1010111")
    def VFREDUSUM_VS:           BitPat = BitPat("b000001_?_?????_?????_001_?????_1010111")
    def VFREDMAX_VS:            BitPat = BitPat("b000111_?_?????_?????_001_?????_1010111")
    def VFREDMIN_VS:            BitPat = BitPat("b000101_?_?????_?????_001_?????_1010111")
    def VFMV_F_S:               BitPat = BitPat("b010000_1_?????_00000_001_?????_1010111")

        // Vector-vector MASK (OPMVV)
    def VREDSUM_VS:             BitPat = BitPat("b000000_?_?????_?????_010_?????_1010111")
    def VREDMAXU_VS:            BitPat = BitPat("b000110_?_?????_?????_010_?????_1010111")
    def VREDMAX_VS:             BitPat = BitPat("b000111_?_?????_?????_010_?????_1010111")
    def VREDMINU_VS:            BitPat = BitPat("b000100_?_?????_?????_010_?????_1010111")
    def VREDMIN_VS:             BitPat = BitPat("b000101_?_?????_?????_010_?????_1010111")
    def VREDAND_VS:             BitPat = BitPat("b000001_?_?????_?????_010_?????_1010111")
    def VREDOR_VS:              BitPat = BitPat("b000010_?_?????_?????_010_?????_1010111")
    def VREDXOR_VS:             BitPat = BitPat("b000011_?_?????_?????_010_?????_1010111")
    def VAADDU_VV:              BitPat = BitPat("b001000_?_?????_?????_010_?????_1010111")
    def VAADD_VV:               BitPat = BitPat("b001001_?_?????_?????_010_?????_1010111")
    def VASUBU_VV:              BitPat = BitPat("b001010_?_?????_?????_010_?????_1010111")
    def VASUB_VV:               BitPat = BitPat("b001011_?_?????_?????_010_?????_1010111")
    def VZEXT_VF2:              BitPat = BitPat("b110110_?_?????_00110_010_?????_1010111")
    def VSEXT_VF2:              BitPat = BitPat("b110110_?_?????_00111_010_?????_1010111")
    def VZEXT_VF4:              BitPat = BitPat("b110110_?_?????_00100_010_?????_1010111")
    def VSEXT_VF4:              BitPat = BitPat("b110110_?_?????_00101_010_?????_1010111")
    def VZEXT_VF8:              BitPat = BitPat("b110110_?_?????_00010_010_?????_1010111")
    def VSEXT_VF8:              BitPat = BitPat("b110110_?_?????_00010_010_?????_1010111")
    def VMULHU_VV:              BitPat = BitPat("b100100_?_?????_?????_010_?????_1010111")
    def VMUL_VV:                BitPat = BitPat("b100101_?_?????_?????_010_?????_1010111")
    def VMULHSU_VV:             BitPat = BitPat("b100110_?_?????_?????_010_?????_1010111")
    def VMULH_VV:               BitPat = BitPat("b100111_?_?????_?????_010_?????_1010111")
    def VDIVU_VV:               BitPat = BitPat("b100000_?_?????_?????_010_?????_1010111")
    def VDIV_VV:                BitPat = BitPat("b100001_?_?????_?????_010_?????_1010111")
    def VREMU_VV:               BitPat = BitPat("b100010_?_?????_?????_010_?????_1010111")
    def VREM_VV:                BitPat = BitPat("b100011_?_?????_?????_010_?????_1010111")
    def VMADD_VV:               BitPat = BitPat("b101001_?_?????_?????_010_?????_1010111")
    def VNMSUB_VV:              BitPat = BitPat("b101011_?_?????_?????_010_?????_1010111")
    def VMACC_VV:               BitPat = BitPat("b101101_?_?????_?????_010_?????_1010111")
    def VNMSAC_VV:              BitPat = BitPat("b101111_?_?????_?????_010_?????_1010111")
    def VWADD_VV:               BitPat = BitPat("b110001_?_?????_?????_010_?????_1010111")
    def VWADDU_VV:              BitPat = BitPat("b110000_?_?????_?????_010_?????_1010111")
    def VWSUB_VV:               BitPat = BitPat("b110011_?_?????_?????_010_?????_1010111")
    def VWSUBU_VV:              BitPat = BitPat("b110010_?_?????_?????_010_?????_1010111")
    def VWADD_WV:               BitPat = BitPat("b110101_?_?????_?????_010_?????_1010111")
    def VWADDU_WV:              BitPat = BitPat("b110100_?_?????_?????_010_?????_1010111")
    def VWSUB_WV:               BitPat = BitPat("b110111_?_?????_?????_010_?????_1010111")
    def VWSUBU_WV:              BitPat = BitPat("b110110_?_?????_?????_010_?????_1010111")
    def VWMULU_VV:              BitPat = BitPat("b111000_?_?????_?????_010_?????_1010111")
    def VWMULSU_VV:             BitPat = BitPat("b111010_?_?????_?????_010_?????_1010111")
    def VWMUL_VV:               BitPat = BitPat("b111011_?_?????_?????_010_?????_1010111")
    def VWMACCU_VV:             BitPat = BitPat("b111100_?_?????_?????_010_?????_1010111")
    def VWMACC_VV:              BitPat = BitPat("b111101_?_?????_?????_010_?????_1010111")
    def VWMACCSU_VV:            BitPat = BitPat("b111111_?_?????_?????_010_?????_1010111")
    def VMANDNOT_MM:            BitPat = BitPat("b011000_1_?????_?????_010_?????_1010111")
    def VMAND_MM:               BitPat = BitPat("b011001_1_?????_?????_010_?????_1010111")
    def VMOR_MM:                BitPat = BitPat("b011010_1_?????_?????_010_?????_1010111")
    def VMXOR_MM:               BitPat = BitPat("b011011_1_?????_?????_010_?????_1010111")
    def VMORNOT_MM:             BitPat = BitPat("b011100_1_?????_?????_010_?????_1010111")
    def VMNAND_MM:              BitPat = BitPat("b011101_1_?????_?????_010_?????_1010111")
    def VMNOR_MM:               BitPat = BitPat("b011110_1_?????_?????_010_?????_1010111")
    def VMXNOR_MM:              BitPat = BitPat("b011111_1_?????_?????_010_?????_1010111")
    def VPOPC_M:                BitPat = BitPat("b010000_?_?????_10000_010_?????_1010111")
    def VFIRST_M:               BitPat = BitPat("b010000_?_?????_10001_010_?????_1010111")
    def VMSBF_M:                BitPat = BitPat("b010100_?_?????_00001_010_?????_1010111")
    def VMSIF_M:                BitPat = BitPat("b010100_?_?????_00011_010_?????_1010111")
    def VMSOF_M:                BitPat = BitPat("b010100_?_?????_00010_010_?????_1010111")
    def VIOTA_M:                BitPat = BitPat("b010100_?_?????_10000_010_?????_1010111")
    def VID_V:                  BitPat = BitPat("b010100_?_00000_10001_010_?????_1010111")
    def VMV_X_S:                BitPat = BitPat("b010100_1_?????_00000_010_?????_1010111")
    def VCOMPRESS_VM:           BitPat = BitPat("b010111_1_?????_00000_010_?????_1010111")

        // Vector-immediate integer (OPIVI)
    def VADD_VI:                BitPat = BitPat("b000000_?_?????_?????_011_?????_1010111")
    def VRSUB_VI:               BitPat = BitPat("b000011_?_?????_?????_011_?????_1010111")
    def VADC_VIM:               BitPat = BitPat("b010000_0_?????_?????_011_?????_1010111")
    def VMADC_VIM:              BitPat = BitPat("b010001_0_?????_?????_011_?????_1010111")
    def VMADC_VI:               BitPat = BitPat("b010001_1_?????_?????_011_?????_1010111")
    def VAND_VI:                BitPat = BitPat("b001001_?_?????_?????_011_?????_1010111")
    def VOR_VI:                 BitPat = BitPat("b001010_?_?????_?????_011_?????_1010111")
    def VXOR_VI:                BitPat = BitPat("b001011_?_?????_?????_011_?????_1010111")
    def VSLL_VI:                BitPat = BitPat("b100101_?_?????_?????_011_?????_1010111")
    def VSRL_VI:                BitPat = BitPat("b101000_?_?????_?????_011_?????_1010111")
    def VSRA_VI:                BitPat = BitPat("b101001_?_?????_?????_011_?????_1010111")
    def VNSRL_VI:               BitPat = BitPat("b101100_?_?????_?????_011_?????_1010111")
    def VNSRA_VI:               BitPat = BitPat("b101101_?_?????_?????_011_?????_1010111")
    def VMSEQ_VI:               BitPat = BitPat("b011000_?_?????_?????_011_?????_1010111")
    def VMSNE_VI:               BitPat = BitPat("b011001_?_?????_?????_011_?????_1010111")
    def VMSLEU_VI:              BitPat = BitPat("b011100_?_?????_?????_011_?????_1010111")
    def VMSLE_VI:               BitPat = BitPat("b011101_?_?????_?????_011_?????_1010111")
    def VMSGTU_VI:              BitPat = BitPat("b011110_?_?????_?????_011_?????_1010111")
    def VMSGT_VI:               BitPat = BitPat("b011111_?_?????_?????_011_?????_1010111")
    def VMERGE_VIM:             BitPat = BitPat("b010111_0_?????_?????_011_?????_1010111")
    def VMV_VI:                 BitPat = BitPat("b010111_1_00000_?????_011_?????_1010111")
    def VSADDU_VI:              BitPat = BitPat("b100000_?_?????_?????_011_?????_1010111")
    def VSADD_VI:               BitPat = BitPat("b100001_?_?????_?????_011_?????_1010111")
    def VSSRL_VI:               BitPat = BitPat("b101010_?_?????_?????_011_?????_1010111")
    def VSSRA_VI:               BitPat = BitPat("b101011_?_?????_?????_011_?????_1010111")
    def VNCLIPU_WI:             BitPat = BitPat("b101110_?_?????_?????_011_?????_1010111")
    def VNCLIP_WI:              BitPat = BitPat("b101111_?_?????_?????_011_?????_1010111")
    def VSLIDEUP_VI:            BitPat = BitPat("b001110_?_?????_?????_011_?????_1010111")
    def VSLIDEDOWN_VI:          BitPat = BitPat("b001111_?_?????_?????_011_?????_1010111")
    def VRGATHER_VI:            BitPat = BitPat("b001100_?_?????_?????_011_?????_1010111")
    def VMV_NR_R_V:             BitPat = BitPat("b100111_1_?????_?????_011_?????_1010111")

        // Vector-scalar integer (OPIVX)
    def VADD_VX:                BitPat = BitPat("b000000_?_?????_?????_100_?????_1010111")
    def VSUB_VX:                BitPat = BitPat("b000010_?_?????_?????_100_?????_1010111")
    def VRSUB_VX:               BitPat = BitPat("b000011_?_?????_?????_100_?????_1010111")
    def VADC_VXM:               BitPat = BitPat("b010000_0_?????_?????_100_?????_1010111")
    def VMADC_VXM:              BitPat = BitPat("b010001_0_?????_?????_100_?????_1010111")
    def VMADC_VX:               BitPat = BitPat("b010001_1_?????_?????_100_?????_1010111")
    def VSBC_VXM:               BitPat = BitPat("b010010_0_?????_?????_100_?????_1010111")
    def VMSBC_VXM:              BitPat = BitPat("b010011_0_?????_?????_100_?????_1010111")
    def VMSBC_VX:               BitPat = BitPat("b010011_1_?????_?????_100_?????_1010111")
    def VAND_VX:                BitPat = BitPat("b001001_?_?????_?????_100_?????_1010111")
    def VOR_VXM:                BitPat = BitPat("b001010_?_?????_?????_100_?????_1010111")
    def VXOR_VX:                BitPat = BitPat("b001011_?_?????_?????_100_?????_1010111")
    def VSLL_VX:                BitPat = BitPat("b100101_?_?????_?????_100_?????_1010111")
    def VSRL_VX:                BitPat = BitPat("b101000_?_?????_?????_100_?????_1010111")
    def VSRA_VX:                BitPat = BitPat("b101001_?_?????_?????_100_?????_1010111")
    def VNSRL_VX:               BitPat = BitPat("b101100_?_?????_?????_100_?????_1010111")
    def VNSRA_VX:               BitPat = BitPat("b101101_?_?????_?????_100_?????_1010111")
    def VMSEQ_VX:               BitPat = BitPat("b011000_?_?????_?????_100_?????_1010111")
    def VMSNE_VX:               BitPat = BitPat("b011001_?_?????_?????_100_?????_1010111")
    def VMSLTU_VX:              BitPat = BitPat("b011010_?_?????_?????_100_?????_1010111")
    def VMSLT_VX:               BitPat = BitPat("b011011_?_?????_?????_100_?????_1010111")
    def VMSLEU_VX:              BitPat = BitPat("b011100_?_?????_?????_100_?????_1010111")
    def VMSLE_VX:               BitPat = BitPat("b011101_?_?????_?????_100_?????_1010111")
    def VMSGTU_VX:              BitPat = BitPat("b011110_?_?????_?????_100_?????_1010111")
    def VMSGT_VX:               BitPat = BitPat("b011111_?_?????_?????_100_?????_1010111")
    def VMINU_VX:               BitPat = BitPat("b000100_?_?????_?????_100_?????_1010111")
    def VMIN_VX:                BitPat = BitPat("b000101_?_?????_?????_100_?????_1010111")
    def VMAXU_VX:               BitPat = BitPat("b000110_?_?????_?????_100_?????_1010111")
    def VMAX_VX:                BitPat = BitPat("b000111_?_?????_?????_100_?????_1010111")
    def VMERGE_VXM:             BitPat = BitPat("b010111_0_?????_?????_100_?????_1010111")
    def VMV_VX:                 BitPat = BitPat("b010111_1_00000_?????_100_?????_1010111")
    def VSADDU_VX:              BitPat = BitPat("b100000_?_?????_?????_100_?????_1010111")
    def VSADD_VX:               BitPat = BitPat("b100001_?_?????_?????_100_?????_1010111")
    def VSSUBU_VX:              BitPat = BitPat("b100010_?_?????_?????_100_?????_1010111")
    def VSSUB_VX:               BitPat = BitPat("b100011_?_?????_?????_100_?????_1010111")
    def VSMUL_VX:               BitPat = BitPat("b100111_?_?????_?????_100_?????_1010111")
    def VSSRL_VX:               BitPat = BitPat("b101010_?_?????_?????_100_?????_1010111")
    def VSSRA_VX:               BitPat = BitPat("b101011_?_?????_?????_100_?????_1010111")
    def VNCLIPU_WX:             BitPat = BitPat("b101110_?_?????_?????_100_?????_1010111")
    def VNCLIP_WX:              BitPat = BitPat("b101111_?_?????_?????_100_?????_1010111")
    def VSLIDEUP_VX:            BitPat = BitPat("b001110_?_?????_?????_100_?????_1010111")
    def VSLIDEDOWN_VX:          BitPat = BitPat("b001111_?_?????_?????_100_?????_1010111")
    def VRGATHER_VX:            BitPat = BitPat("b001100_?_?????_?????_100_?????_1010111")

        // Vector-scalar float (OPFVF)
    def VFADD_VF:               BitPat = BitPat("b000000_?_?????_?????_101_?????_1010111")
    def VFSUB_VF:               BitPat = BitPat("b000010_?_?????_?????_101_?????_1010111")
    def VFRSUB_VF:              BitPat = BitPat("b100111_?_?????_?????_101_?????_1010111")
    def VFWADD_VF:              BitPat = BitPat("b110000_?_?????_?????_101_?????_1010111")
    def VFWSUB_VF:              BitPat = BitPat("b110010_?_?????_?????_101_?????_1010111")
    def VFWADD_WF:              BitPat = BitPat("b110100_?_?????_?????_101_?????_1010111")
    def VFWSUB_WF:              BitPat = BitPat("b110110_?_?????_?????_101_?????_1010111")
    def VFMUL_VF:               BitPat = BitPat("b100100_?_?????_?????_101_?????_1010111")
    def VFDIV_VF:               BitPat = BitPat("b100000_?_?????_?????_101_?????_1010111")
    def VFRDIV_VF:              BitPat = BitPat("b100001_?_?????_?????_101_?????_1010111")
    def VFWMUL_VF:              BitPat = BitPat("b111000_?_?????_?????_101_?????_1010111")
    def VFMADD_VF:              BitPat = BitPat("b101000_?_?????_?????_101_?????_1010111")
    def VFNMADD_VF:             BitPat = BitPat("b101001_?_?????_?????_101_?????_1010111")
    def VFMSUB_VF:              BitPat = BitPat("b101010_?_?????_?????_101_?????_1010111")
    def VFNMSUB_VF:             BitPat = BitPat("b101011_?_?????_?????_101_?????_1010111")
    def VFMACC_VF:              BitPat = BitPat("b101100_?_?????_?????_101_?????_1010111")
    def VFNMACC_VF:             BitPat = BitPat("b101101_?_?????_?????_101_?????_1010111")
    def VFMSAC_VF:              BitPat = BitPat("b101110_?_?????_?????_101_?????_1010111")
    def VFNMSAC_VF:             BitPat = BitPat("b101111_?_?????_?????_101_?????_1010111")
    def VFWMACC_VF:             BitPat = BitPat("b111100_?_?????_?????_101_?????_1010111")
    def VFWNMACC_VF:            BitPat = BitPat("b111101_?_?????_?????_101_?????_1010111")
    def VFWMSAC_VF:             BitPat = BitPat("b111110_?_?????_?????_101_?????_1010111")
    def VFWNMSAC_VF:            BitPat = BitPat("b111111_?_?????_?????_101_?????_1010111")
    def VFMIN_VF:               BitPat = BitPat("b000100_?_?????_?????_101_?????_1010111")
    def VFMAX_VF:               BitPat = BitPat("b000110_?_?????_?????_101_?????_1010111")
    def VFSGNJ_VF:              BitPat = BitPat("b001000_?_?????_?????_101_?????_1010111")
    def VFSGNJN_VF:             BitPat = BitPat("b001001_?_?????_?????_101_?????_1010111")
    def VFSGNJX_VF:             BitPat = BitPat("b001010_?_?????_?????_101_?????_1010111")
    def VMFEQ_VF:               BitPat = BitPat("b011000_?_?????_?????_101_?????_1010111")
    def VMFLE_VF:               BitPat = BitPat("b011001_?_?????_?????_101_?????_1010111")
    def VMFLT_VF:               BitPat = BitPat("b011011_?_?????_?????_101_?????_1010111")
    def VMFNE_VF:               BitPat = BitPat("b011100_?_?????_?????_101_?????_1010111")
    def VMFGT_VF:               BitPat = BitPat("b011101_?_?????_?????_101_?????_1010111")
    def VMFGE_VF:               BitPat = BitPat("b011111_?_?????_?????_101_?????_1010111")
    def VFMERGE_VFM:            BitPat = BitPat("b010111_0_?????_?????_101_?????_1010111")
    def VFMV_V_F:               BitPat = BitPat("b010111_1_00000_?????_101_?????_1010111")
    def VFMV_S_F:               BitPat = BitPat("b010000_1_00000_?????_101_?????_1010111")
    def VFSLIDE1UP_VF:          BitPat = BitPat("b001110_?_?????_?????_101_?????_1010111")
    def VFSLIDE1DOWN_VF:        BitPat = BitPat("b001111_?_?????_?????_101_?????_1010111")

        // Vector-scalar mask (OPMVX)
    def VAADDU_VX:              BitPat = BitPat("b001000_?_?????_?????_110_?????_1010111")
    def VAADD_VX:               BitPat = BitPat("b001001_?_?????_?????_110_?????_1010111")
    def VASUBU_VX:              BitPat = BitPat("b001010_?_?????_?????_110_?????_1010111")
    def VASUB_VX:               BitPat = BitPat("b001011_?_?????_?????_110_?????_1010111")
    def VMUL_VX:                BitPat = BitPat("b100100_?_?????_?????_110_?????_1010111")
    def VMULHU_VX:              BitPat = BitPat("b100101_?_?????_?????_110_?????_1010111")
    def VMULHSU_VX:             BitPat = BitPat("b100110_?_?????_?????_110_?????_1010111")
    def VMULH_VX:               BitPat = BitPat("b100111_?_?????_?????_110_?????_1010111")
    def VDIVU_VX:               BitPat = BitPat("b100000_?_?????_?????_110_?????_1010111")
    def VDIV_VX:                BitPat = BitPat("b100001_?_?????_?????_110_?????_1010111")
    def VREMU_VX:               BitPat = BitPat("b100010_?_?????_?????_110_?????_1010111")
    def VREM_VX:                BitPat = BitPat("b100011_?_?????_?????_110_?????_1010111")
    def VMADD_VX:               BitPat = BitPat("b101001_?_?????_?????_110_?????_1010111")
    def VNMSUB_VX:              BitPat = BitPat("b101011_?_?????_?????_110_?????_1010111")
    def VMACC_VX:               BitPat = BitPat("b101101_?_?????_?????_110_?????_1010111")
    def VNMSAC_VX:              BitPat = BitPat("b101111_?_?????_?????_110_?????_1010111")
    def VWADD_VX:               BitPat = BitPat("b110001_?_?????_?????_110_?????_1010111")
    def VWADDU_VX:              BitPat = BitPat("b110000_?_?????_?????_110_?????_1010111")
    def VWSUB_VX:               BitPat = BitPat("b110011_?_?????_?????_110_?????_1010111")
    def VWSUBU_VX:              BitPat = BitPat("b110010_?_?????_?????_110_?????_1010111")
    def VWADD_WX:               BitPat = BitPat("b110101_?_?????_?????_110_?????_1010111")
    def VWADDU_WX:              BitPat = BitPat("b110100_?_?????_?????_110_?????_1010111")
    def VWSUB_WX:               BitPat = BitPat("b110111_?_?????_?????_110_?????_1010111")
    def VWSUBU_WX:              BitPat = BitPat("b110110_?_?????_?????_110_?????_1010111")
    def VWMULU_VX:              BitPat = BitPat("b111000_?_?????_?????_110_?????_1010111")
    def VWMULSU_VX:             BitPat = BitPat("b111010_?_?????_?????_110_?????_1010111")
    def VWMUL_VX:               BitPat = BitPat("b111011_?_?????_?????_110_?????_1010111")
    def VWMACCU_VX:             BitPat = BitPat("b111100_?_?????_?????_110_?????_1010111")
    def VWMACC_VX:              BitPat = BitPat("b111101_?_?????_?????_110_?????_1010111")
    def VWMACCUS_VX:            BitPat = BitPat("b111110_?_?????_?????_110_?????_1010111")
    def VWMACCSU_VX:            BitPat = BitPat("b111111_?_?????_?????_110_?????_1010111")
    def VMV_S_X:                BitPat = BitPat("b010000_1_00000_?????_110_?????_1010111")
    def VSLIDE1UP_VX:           BitPat = BitPat("b001110_?_?????_?????_110_?????_1010111")
    def VSLIDE1DOWN_VX:         BitPat = BitPat("b001111_?_?????_?????_110_?????_1010111")

        // Scalar-immediate (OPCFG) - None were listed in the specification, is it just the scalar instructions?
        // vset{i}vl{i}
    def VSETVLI:                BitPat = BitPat("b0_???????????_?????_111_?????_1010111")
    def VSETIVLI:               BitPat = BitPat("b11_??????????_?????_111_?????_1010111")
    def VSETVL:                 BitPat = BitPat("b1000000_?????_?????_111_?????_1010111")

     */
}
